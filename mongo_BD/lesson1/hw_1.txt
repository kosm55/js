// 1) Знайти всіх юзерів в кого вік менше за 20
db.users.find({age: {$lt:20}})

// 2) Знайти всіх юзерів в котрих хоча б один з батьків Tamara або Petro
db.users.find({
    $or:[
        {parents:/^tamara/i},
        {parents:/^petro/i}
    ]
})
// 3) Знайти всіх юзерів які вивчають js
db.users.find({studying: 'js'})
// 4) Знайти всіх юзерів котрі вивчають тільки один предмет и додати їм java

db.users.updateMany(
    {
    $and:[
    {studying: {$exists:1}},
    {'studying.1': {$exists:0}}]
    },
    {$set: {'studying.1':'java1'}}
)
db.users.find()//check

-----
db.getCollection('users').updateMany(
    {
       studying:{$size:1}
    },
    {$push:{studying:'java'}}
)

// 5) Знайти всіх юзерів номера будинків яких знаходяться в межах 1-20
db.users.find({'address.house':{$in:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]}})
---
db.getCollection('users').find(
    {
        $and:[
            {'address.house':{$gte:1}},
            {'address.house':{$lte:20}}
        ]
    }
)

// 6) Знайти всіх юзерів в яких назва вулиці містить пробіл
db.users.find({'address.street': /.* .*/})

// 7) Видалити всіх юзерів в котрих немає поля studying
db.users.deleteMany({studying: {$exists:0}})
-----
db.getCollection('users').deleteMany({studying:null})


// 8) Знайти всіх юзерів в котрих в ім'я когось с батьків закінчується на 'na'
db.users.find({parents:/na$/i})

// 9) Всім юзерам котрі не вивчають python додати його
db.users.updateMany(
    {studying:{$ne:'python'}},
    {$push: {studying:'python'}}
    )

// 10) Посортувати юзерів по рейтингу та по номеру квартири (що то що то, від більшого меншого)
db.users.find().sort({rating:-1, "address.flat":-1})